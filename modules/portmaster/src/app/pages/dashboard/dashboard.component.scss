:host {
  @apply flex flex-row w-full gap-3 p-4;
}

.dashboard-grid {
  @apply grid gap-4;

  align-items: stretch;
  justify-items: stretch;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-areas:
    "header header header header"
    "feature feature feature feature"
    "stats   stats   stats   stats"
    "countries countries map map"
    "blocked blocked map map";
}

#header {
  grid-area: header;
}

#features {
  grid-area: feature;
}

#stats {
  grid-area: stats;
}

#countries {
  grid-area: countries;
}

#blocked {
  grid-area: blocked;
}

#connmap {
  grid-area: map;
}

.auto-grid-3 {
  @apply grid gap-4;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.auto-grid-4 {
  @apply grid gap-4;
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.feature-card-container {
  @apply bg-gray-200 p-4 self-stretch rounded-md flex flex-col gap-2;

  label {
    @apply text-xs uppercase text-secondary font-light flex flex-row items-center gap-2 pb-2;
  }

  .feature-card-list {
    @apply grid gap-3 grid-flow-col w-full;
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }
}

.feature-card {
  @apply flex flex-col p-4 bg-gray-300 rounded shadow w-full relative gap-2 overflow-hidden;

  .disabled-bg {
    @apply absolute top-0 left-0 text-gray-500;
  }

  &.disabled {
    @apply opacity-60 shadow-inner;
  }

  &:not(.disabled) {
    &:hover {
      @apply bg-gray-400;
    }

    @apply cursor-pointer;
  }

  header {
    @apply flex flex-row items-center justify-start gap-2 w-full;

    svg {
      @apply w-5 h-5;
    }

    &>span {
      @apply text-base font-light;
    }
  }
}

::ng-deep #map {
  #world-group {
    --map-bg: #111112;
    --map-country-active: #424141;
    --map-country-inactive: #2a2a2a;
    --map-country-border-width: 1px;
    --map-country-border-color: #1e1e1e;
    --map-country-border-color-selected: #858585;
    --map-country-blocked-primary: #858585;
    --map-country-blocked-secondary: #402323;

    path {
      fill: var(--map-country-active);
      stroke: var(--map-bg);
      stroke-width: var(--map-country-border-width);
      stroke-linejoin: round;
    }

    path.active {
      @apply text-blue text-opacity-80;
      fill: currentColor;
    }

    path.hover {
      @apply text-green-300 text-opacity-80;
      fill: currentColor;
    }
  }
}

.ribbon {
  width: 90px;
  height: 100%;
  overflow: hidden;
  position: absolute;
  top: 0px;
  right: 0px;
  z-index: 100;
}

.ribbon__content {
  left: -7px;
  top: 25px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  position: absolute;
  display: block;
  width: 125px;
  padding: 2px 0;
  // background-color: #00aaa0;
  @apply bg-blue;
  // box-shadow: 0 0px 10px;
  color: #fff;
  text-shadow: 0 1px 1px rgba(0, 0, 0, .2);
  text-transform: uppercase;
  text-align: center;
  border: 2px dotted #fff;
  outline: 3px solid #f5cd79aa;
}


.mini-stat {
  @apply flex flex-col items-center justify-center py-3 px-2 bg-gray-300 rounded shadow;

  label {
    @apply font-light uppercase text-xxs text-secondary -mb-2;
  }

  span {
    @apply text-xl text-blue;
  }
}
