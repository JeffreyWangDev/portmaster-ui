:host {
  overflow: visible;
  position: relative;
  width: 100%;
  display: flex;
  justify-content: space-between;
  background: none;
  user-select: none;
  align-items: center;
  justify-content: space-evenly;



  svg.shield {
    width: 7.25rem;

    transform: scale(0.95);

    path {
      top: 0px;
      left: 0px;
      transform-origin: center center;
    }

    /* TODO(LukeSeers): Refactor low, medium and high at a later date. */

    .shield-one {
      transform: scale(.62);
    }

    .shield-two {
      animation-delay: -1.2s;
      opacity: .6;
      transform: scale(.8);
    }

    .shield-three {
      animation-delay: -2.5s;
      opacity: .4;
      transform: scale(1);
    }

    &.low {
      filter: saturate(1.4);

      .shield-one {
        fill: var(--protection-ok-primary);
      }


      .shield-two {
        fill: var(--protection-ok-secondary);
      }

      .shield-three {
        fill: var(--protection-ok-tertiary);
      }

      .shield-warn,
      .shield-fail {
        display: none;
      }

      .shield-ok {
        stroke: var(--background);
        fill: none;
        transform: scale(.5);
      }
    }

    &.medium {
      filter: saturate(1.3);

      .shield-one {
        fill: var(--protection-warn-primary);
      }

      .shield-three,
      .shield-two {
        //animation: shield-pulse 3s linear;
      }

      .shield-two {
        fill: var(--protection-warn-secondary);
      }

      .shield-three {
        fill: var(--protection-warn-tertiary);
      }

      .shield-ok,
      .shield-fail {
        display: none;
      }

      .shield-warn {
        stroke: var(--background);
        fill: none;
        transform: scale(.5);
      }
    }

    &.high {
      filter: saturate(1.3);

      .shield-one {
        fill: var(--protection-fail-primary);
      }

      .shield-three,
      .shield-two {
        //animation: shield-pulse 3s linear reverse;
      }

      .shield-two {
        fill: var(--protection-fail-secondary);
      }

      .shield-three {
        fill: var(--protection-fail-tertiary);
      }

      .shield-warn,
      .shield-ok {
        display: none;
      }

      .shield-fail {
        stroke: var(--background);
        fill: none;
        transform: scale(.45);
      }
    }
  }

  .status {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    @apply mr-2;
    position: relative;

    h2 {
      padding: 0;
      margin: 0;
      margin-top: -0.8rem;
      font-size: 1rem;
      font-weight: 500;
      letter-spacing: 1px;
    }

    span {
      padding-top: 0.15rem;
      margin: 0;
      opacity: .4;
      font-size: 0.65rem;
      font-weight: 400;
    }

    .info-text {
      opacity: 1;
      font-weight: 500;
      font-size: 100%;

      &.low {
        color: theme("colors.info.green");
      }

      &.medium {
        color: theme("colors.info.yellow");
      }

      &.high {
        color: theme("colors.info.red");
      }
    }
  }

  .level-list {
    flex-grow: 1;

    label {
      opacity: 0.6;
      font-size: 0.75rem;
      font-weight: 500;
    }

    div.rate-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 0 0.3rem 0;
      margin-right: 0.11rem;

      .auto-detect {
        height: 5px;
        width: 5px;
        margin-right: 10px;
        margin-bottom: 1px;
        background-color: #4995f3;
        border-radius: 50%;
        display: inline-block;
      }
    }

    &:not(.auto-pilot) {
      div.level.selected {
        div {
          background-color: #292929;
        }

        &:after {
          transition: none;
          opacity: 0 !important;
        }
      }
    }

    div.level {
      position: relative;
      padding: 2px;
      margin-top: 0.155rem;
      cursor: pointer;
      overflow: hidden;
      z-index: 1;

      fa-icon[icon*="question-circle"] {
        float: right;
      }

      &:after {
        transition: all cubic-bezier(0.19, 1, 0.82, 1) .2s;
        @apply rounded;
        content: "";
        filter: saturate(1.3);
        background-image: linear-gradient(90deg, #226ab79f 0%, rgba(2, 0, 36, 0) 45%);
        transform: translateX(100%);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
        opacity: 0;
      }

      div {
        background-color: #202020;
        border-radius: 2px;
        padding: 9px 17px 10px 18px;
        display: block;
        opacity: 0.55;

        span {
          font-size: 0.725rem;
          font-weight: 400;
        }

        .situation {
          @apply text-tertiary;
          @apply ml-2;
          font-size: 0.6rem;
          font-weight: 600;
        }

        svg.help {
          width: 0.95rem;
          float: right;
          padding: 0;
          margin: 0;
          margin-top: 1.5px;

          .inner {
            stroke: var(--text-secondary);
          }

          &:hover,
          &:active {
            .inner {
              stroke: var(--text-primary);
            }
          }
        }
      }

      &.selected {
        div {
          background-color: #292929;
          opacity: 1;
        }
      }

      &.selected,
      &.suggested {
        &:after {
          transform: translateX(0%);
          opacity: 1;
        }

      }

      &.suggested {
        &:after {
          animation: pulse-opacity 1s ease-in-out infinite alternate;
        }
      }

      &:hover,
      &:active {
        div {
          opacity: 1;

          span {
            opacity: 1;
          }
        }
      }
    }
  }

  @keyframes shield-pulse {
    0% {
      transform: scale(.62);
      opacity: 1;
    }

    100% {
      transform: scale(1.1);
      opacity: 0;
    }
  }

  @keyframes pulse-opacity {
    0% {
      opacity: 0.1;
    }

    100% {
      opacity: 1;
    }
  }
}

.spn-status {
  background-color: var(--info-blue);
  border-radius: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 1 !important;
  padding: 0.2rem;
  transform: scale(0.8);
  position: absolute;
  bottom: 42px;
  right: 18px;

  &.connected {
    background-color: theme('colors.info.blue');
  }

  &.connecting,
  &.failed {
    background-color: theme('colors.info.gray');
  }

  svg {
    stroke: white;
  }
}
