name: Build Artifacts
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  ui:
    name: Angular UI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-ui-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-ui-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build and lint
        run: |
          cd modules/portmaster
          npm install
          npm run build

  electron:
    name: Electron
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install wine # wine is needed for electron multi-platform build
        run: sudo bash -c "apt-get update || true ; apt-get install wine || true"
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Install dependencies
        run: cd app-electron && npm install

      - name: Build electron app
        run: cd app-electron && npm run build

      - name: Bundle electron app
        run: cd app-electron && npm run bundle

      - name: Lint eelectron app
        run: cd app-electron && npm run lint

  notifier:
    name: Notifier
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          args: -c ./.golangci.yml
          skip-go-installation: true
          working-directory: notifier

      - name: Download modules
        run: cd notifier && go mod download

      - name: Build notifier for linux
        run: cd notifier && go build .

      - name: Build notifier for windows
        run: cd notifier && GOOS=windows go build .
